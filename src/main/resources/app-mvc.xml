<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
    	http://www.springframework.org/schema/beans
    	http://www.springframework.org/schema/beans/spring-beans.xsd
    	http://www.springframework.org/schema/context
    	http://www.springframework.org/schema/context/spring-context.xsd
    	http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
 	<!-- 
		注册 RequestMappingHandlerMapping、RequestMappingHandlerAdapter、
		ExceptionHandlerExceptionResolver 用于支持处理使用注解方式的控制器方法
	-->
	<mvc:annotation-driven validator="validator">
		<mvc:message-converters>  
            <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">  
                <property name="objectMapper" ref="jsonObjectMapper"></property>  
            </bean>  
        </mvc:message-converters>
	</mvc:annotation-driven>
	
	<bean id="jsonObjectMapper" class="com.comiyun.core.web.json.JsonObjectMapper"></bean>
	
	<!-- 以下 validator  ConversionService 在使用 mvc:annotation-driven 会 自动注册-->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <!-- 如果不加默认到 使用classpath下的 ValidationMessages.properties -->
        <property name="validationMessageSource" ref="messageSource"/>
    </bean>

	<!-- i18n资源文件 -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>classpath:org/hibernate/validator/ValidationMessages</value>
				<value>classpath:message/commons</value>
				<value>classpath:message/system</value>
				<value>classpath:message/attendance</value>
			</list>
		</property>
		<property name="useCodeAsDefaultMessage" value="true"/>
		<property name="fallbackToSystemLocale" value="false" />
		<property name="defaultEncoding" value="UTF-8" />
		<property name="cacheSeconds" value="180" />
	</bean>

	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="ignoreDefaultModelOnRedirect" value="true" />
	</bean>
	
	<!-- 容器默认的DefaultServletHandler处理 所有静态内容与无RequestMapping处理的URL-->
	<mvc:default-servlet-handler/>

	<!-- 控制器组件包扫描，加载控制器类 -->
	<context:component-scan base-package="com.comiyun">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
	</context:component-scan>
	
	<!-- 请求的URL地址到视图名字的自动转换器定义 -->
	<bean id="viewNameTranslator" class="org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator" />

	<!-- 视图解析器：定义根据客户端的不同的请求决定不同的view进行响应-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:prefix="/WEB-INF/view/" p:suffix=".jsp" />
	
	<!-- 上传文件 -->
	<bean id="multipartResolver" 
	    class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		p:defaultEncoding="UTF-8">
		<property name="maxUploadSize">
			<value>104857600</value>
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>

	<!-- Cookie级国际化解析  -->
	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<property name="defaultLocale" value="zh_CN"/>
	</bean>
	
	<!-- 链接式国际化拦截器  必需配置，可以和其它国际化方式通用 -->
	<bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>
	
	<!-- 定义公共控制器 -->
	<bean id="defaultHandlerMapping" class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/>
	
	<!-- 异常处理器定义 -->
	<bean id="defaultExceptionHandler" class="com.comiyun.core.web.handler.CustMappingExceptionResolver">
	</bean>
</beans>